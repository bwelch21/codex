{
  "service": {
    "service": "codex",
    "serviceObject": {
      "name": "codex"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "lambda:InvokeFunction"
              ],
              "Resource": {
                "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:codex-prod-apiService"
              }
            }
          ]
        }
      },
      "stage": "prod",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "WebServerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/codex-prod-webServer"
            }
          },
          "ApiServiceLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/codex-prod-apiService"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "codex",
                        "prod",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/codex-prod*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/codex-prod*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "codex",
                    "prod",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "WebServerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-262a5daa-ac8d",
                "S3Key": "serverless/codex/prod/1750884901371-2025-06-25T20:55:01.371Z/webServer.zip"
              },
              "Handler": "services/web-server/dist/handler.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "codex-prod-webServer",
              "MemorySize": 512,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "INTERNAL_API_SERVICE_FN": "codex-prod-apiService"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "WebServerLogGroup"
            ]
          },
          "ApiServiceLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-262a5daa-ac8d",
                "S3Key": "serverless/codex/prod/1750884901371-2025-06-25T20:55:01.371Z/apiService.zip"
              },
              "Handler": "services/api/dist/handler.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "codex-prod-apiService",
              "MemorySize": 512,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ApiServiceLogGroup"
            ]
          },
          "ApiServiceLambdaVersionlhQ9sP7O5NlFkoC5DTJiAFBEfspbh27dFoL5uHAzA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiServiceLambdaFunction"
              },
              "CodeSha256": "KVEASxW58p2KA1TpYOD1Dcs565Daoq+jLzd1cyLJdy4="
            }
          },
          "WebServerLambdaVersionqyPAkCFkQI84PoGufAKPwL0uNqHjCxFtBVjcXpg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "WebServerLambdaFunction"
              },
              "CodeSha256": "5Ye+y0+SrP8nhhRzgt/csVfsDKldyyuNzpL/LFZvW34="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "prod-codex",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "WebServerLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "WebServerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationWebServer": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"WebServerLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteAnyProxyVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "ANY /{proxy+}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationWebServer"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationWebServer"
          },
          "ApiServiceInvokePermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiServiceLambdaFunction"
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "lambda.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "WebServerLambdaFunction",
                  "Arn"
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-262a5daa-ac8d",
            "Export": {
              "Name": "sls-codex-prod-ServerlessDeploymentBucketName"
            }
          },
          "ApiServiceLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiServiceLambdaVersionlhQ9sP7O5NlFkoC5DTJiAFBEfspbh27dFoL5uHAzA"
            },
            "Export": {
              "Name": "sls-codex-prod-ApiServiceLambdaFunctionQualifiedArn"
            }
          },
          "WebServerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "WebServerLambdaVersionqyPAkCFkQI84PoGufAKPwL0uNqHjCxFtBVjcXpg"
            },
            "Export": {
              "Name": "sls-codex-prod-WebServerLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-codex-prod-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-codex-prod-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "webServer": {
        "handler": "services/web-server/dist/handler.handler",
        "name": "codex-prod-webServer",
        "memorySize": 512,
        "events": [
          {
            "httpApi": {
              "method": "ANY",
              "path": "/{proxy+}"
            },
            "resolvedMethod": "ANY",
            "resolvedPath": "/{proxy+}"
          }
        ],
        "environment": {
          "INTERNAL_API_SERVICE_FN": "codex-prod-apiService"
        },
        "package": {
          "patterns": [
            "!**",
            "services/web-server/dist/**",
            "services/web-server/package.json",
            "services/web-server/node_modules/**",
            "node_modules/**",
            "!**/*.map",
            "!**/test{,s}/**",
            "!**/__tests__/**",
            "!**/*.md"
          ],
          "artifact": ".serverless/webServer.zip"
        },
        "memory": 512,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "WebServerLambdaVersionqyPAkCFkQI84PoGufAKPwL0uNqHjCxFtBVjcXpg"
      },
      "apiService": {
        "handler": "services/api/dist/handler.handler",
        "name": "codex-prod-apiService",
        "memorySize": 512,
        "package": {
          "patterns": [
            "!**",
            "services/api/dist/**",
            "services/api/package.json",
            "services/api/node_modules/**",
            "!**/*.map",
            "!**/test{,s}/**",
            "!**/__tests__/**",
            "!**/*.md",
            "!**/testFixtures/**"
          ],
          "artifact": ".serverless/apiService.zip"
        },
        "events": [],
        "memory": 512,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ApiServiceLambdaVersionlhQ9sP7O5NlFkoC5DTJiAFBEfspbh27dFoL5uHAzA"
      }
    },
    "resources": {
      "Resources": {
        "ApiServiceInvokePermission": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Ref": "ApiServiceLambdaFunction"
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "lambda.amazonaws.com",
            "SourceArn": {
              "Fn::GetAtt": [
                "WebServerLambdaFunction",
                "Arn"
              ]
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "service": "codex",
      "frameworkVersion": "4",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "individually": true,
        "excludeDevDependencies": true,
        "artifactsS3KeyDirname": "serverless/codex/prod/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-us-east-1-262a5daa-ac8d",
        "artifactDirectoryName": "serverless/codex/prod/1750884901371-2025-06-25T20:55:01.371Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "appId": null,
    "orgId": null,
    "layers": {}
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/codex/prod/1750884901371-2025-06-25T20:55:01.371Z",
    "artifact": ""
  }
}